apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
        release {

        }
        debug {

        }


    }
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.johngoodstadt.memorize"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }
    flavorDimensions "versionCode"
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {

        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    productFlavors {
        student {
            applicationIdSuffix ".music.student"
            dimension "versionCode"
            resValue "string", "app_name", "M Music SE"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_memorize"
            ]
        }


        legaldemo {
            applicationIdSuffix = '.legal.demo'
            dimension = 'versionCode'
            resValue "string", "app_name", "Law"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_memorize"
            ]

        }

    }
    dataBinding {
        enabled = true
    }
    sourceSets {

        student {
            java.srcDirs = ['src/student/java', 'src/student/java/jg']
        }
        legaldemo {
            java.srcDirs = ['src/legalDemo/java', 'src/legalDemo/java/jg']
            res.srcDirs = ['res', 'src/legalDemo/res']
        }

    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //dagger
    implementation 'com.google.dagger:dagger:2.25.2'
    kapt 'com.google.dagger:dagger-compiler:2.25.2'
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'
    //firebase analytics
    implementation 'com.google.firebase:firebase-analytics:17.2.1'

//ADDED FOR PlanD
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    def room_version = "2.1.0-rc01"

    implementation "androidx.room:room-runtime:$room_version"
    //annotationProcessor "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
    kapt "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

//for viewmodel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0"

    implementation "org.jetbrains.anko:anko-commons:0.10.2"
    implementation "org.jetbrains.anko:anko-design:0.10.2"

    api 'com.theartofdev.edmodo:android-image-cropper:2.8.+'


    implementation 'com.github.chrisbanes:PhotoView:2.0.0'
}
//apply plugin: 'com.google.gms.google-services'  // Google Services plugin

